import numpy as np
from sklearn.metrics import precision_score, recall_score, f1_score

thresholds = np.linspace(0.1, 0.9, 20)

recalls_nn = []
recalls_log = []
precisions_nn = []
precisions_log = []
f1s_nn = []
f1s_log = []

for t in thresholds:
    # Predicciones para red neuronal
    y_pred_nn = (y_proba_nn >= t).astype(int)
    recalls_nn.append(recall_score(y_test, y_pred_nn))
    precisions_nn.append(precision_score(y_test, y_pred_nn))
    f1s_nn.append(f1_score(y_test, y_pred_nn))

    # Predicciones para regresión logística
    y_pred_log = (y_proba_log >= t).astype(int)
    recalls_log.append(recall_score(y_test, y_pred_log))
    precisions_log.append(precision_score(y_test, y_pred_log))
    f1s_log.append(f1_score(y_test, y_pred_log))

    import matplotlib.pyplot as plt

plt.figure(figsize=(10, 6))

plt.plot(thresholds, recalls_nn, label='Recall NN', linestyle='-')
plt.plot(thresholds, precisions_nn, label='Precisión NN', linestyle='--')
plt.plot(thresholds, f1s_nn, label='F1 NN', linestyle=':')

plt.plot(thresholds, recalls_log, label='Recall Regresión Log.', linestyle='-')
plt.plot(thresholds, precisions_log, label='Precisión Regresión Log.', linestyle='--')
plt.plot(thresholds, f1s_log, label='F1 Regresión Log.', linestyle=':')

plt.xlabel('Umbral')
plt.ylabel('Métrica')
plt.title('Métricas vs. Umbral')
plt.legend()
plt.grid(True)
plt.show()